process phiSymCalibrationProcess = {

   service = MessageLogger
   {
      untracked vstring destinations = {"cerr", "cout"}
      untracked PSet cerr 		     = { untracked string threshold = "ERROR" }
      untracked PSet cout 		     = { untracked string threshold = "WARNING" }
   }

  source = PoolSource {
  
              untracked vstring fileNames = {
                                          INPUTFILES
			                     }
                      }

  #Apply miscalibrations


	

#include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence_frontier.cff"

include "CalibCalorimetry/Configuration/data/Ecal_FakeConditions.cff"
 
  es_source = CaloMiscalibTools{
   untracked string fileNameBarrel = "/afs/cern.ch/cms/sw/slc4_ia32_gcc345/cms/cmssw/CMSSW_1_7_0_pre12/src/CalibCalorimetry/CaloMiscalibTools/data/miscalibcsa07_barrel.xml"
   untracked string fileNameEndcap = "/afs/cern.ch/cms/sw/slc4_ia32_gcc345/cms/cmssw/CMSSW_1_7_0_pre12/src/CalibCalorimetry/CaloMiscalibTools/data/miscalibcsa07_endcap.xml"
   }
   es_prefer = CaloMiscalibTools{} 


    module miscalrechit = EcalRecHitRecalib {
    string ecalRecHitsProducer = "alCaPhiSymRecHits"
    string barrelHitCollection = "phiSymEcalRecHitsEB"
    string endcapHitCollection = "phiSymEcalRecHitsEE"
    string RecalibBarrelHitCollection = "phiSymEcalRecHitsEBMis"
    string RecalibEndcapHitCollection = "phiSymEcalRecHitsEEMis"
  }

  # geometry needed for clustering
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  module phisymcalib = PhiSymmetryCalibration {
    string VerbosityLevel = "WARNING"

    untracked uint32 maxLoops = 1
    string ecalRecHitsProducer = "miscalrechit"
    string barrelHitCollection = "phiSymEcalRecHitsEBMis"
    string endcapHitCollection = "phiSymEcalRecHitsEEMis"
    double eCut_barrel = 0.15
    double eCut_endcap = 0.75
    int32 eventSet = NUMBER
  }

  path p = {miscalrechit, phisymcalib}
}
