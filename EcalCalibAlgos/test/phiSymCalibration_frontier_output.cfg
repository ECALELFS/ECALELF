process phiSymCalibrationProcess = {

   service = MessageLogger
   {
      untracked vstring destinations = {"cerr", "cout"}
      untracked PSet cerr 		     = { untracked string threshold = "ERROR" }
      untracked PSet cout 		     = { untracked string threshold = "WARNING" }
   }

  source = PoolSource {
     untracked vstring fileNames = {
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/00513D2C-2D63-DB11-A2AD-00304885AFC6.root'
				  }
     untracked int32 maxEvents = 0
     untracked uint32 debugVebosity = 1
     untracked bool   debugFlag     = false
  }

  #Apply miscalibrations

  include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence_frontier.cff"

  module miscalrechit = EcalRecHitMiscalib {
    string ecalRecHitsProducer = "alCaPhiSymRecHits"
    string barrelHitCollection = "phiSymEcalRecHitsEB"
    string endcapHitCollection = "phiSymEcalRecHitsEE"
    string RecalibBarrelHitCollection = "phiSymEcalRecHitsEBMis"
    string RecalibEndcapHitCollection = "phiSymEcalRecHitsEEMis"
  }

  # geometry needed for clustering
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  module phisymcalib = PhiSymmetryCalibration {
    string VerbosityLevel = "WARNING"

    untracked uint32 maxLoops = 1
    string ecalRecHitsProducer = "miscalrechit"
    string barrelHitCollection = "phiSymEcalRecHitsEBMis"
    string endcapHitCollection = "phiSymEcalRecHitsEEMis"
    double eCut_barrel = 0.15
    double eCut_endcap = 0.75
    int32 eventSet = 0
  }

  path p = {miscalrechit, phisymcalib}
}
