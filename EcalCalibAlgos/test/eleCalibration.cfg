process ProcessOne = {
   service = MessageLogger
   {
      untracked vstring destinations = {"cerr", "cout"}
      PSet cerr 		     = { string threshold = "WARNING" }
      PSet cout 		     = { string threshold = "INFO"    }

      untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
      vstring categories = { "FwkJob" }

      PSet FrameworkJobReport.xml = {
				PSet default = { int32 limit = 0 }
				PSet FwkJob = { int32 limit = 10000000 }
				    }

   }


 #######################################################################################
# input

  source = PoolSource {
     untracked vstring fileNames = {
 				    'file:/usr/lorenzo/TB04data/ecs73663.root' 
				  }
     untracked int32 maxEvents = -1
     untracked uint32 debugVebosity = 1
     untracked bool   debugFlag     = false
  }
  
 #######################################################################################

  es_source = PoolDBESSource { VPSet toGet = {
			       {string record = "EcalIntercalibConstantsRcd"
				 string tag = "EcalIntercalibConstants"
				},
				{string record = "EcalADCToGeVConstantRcd"
				 string tag = "EcalADCToGeVConstant"
				}
			       
				}
			       bool loadAll = true
			       string connect = "sqlite_file:/afs/cern.ch/cms/ECAL/testbeam/pedestal/2004/ecal2004condDB.db"
			      untracked string catalog = "file:/afs/cern.ch/cms/ECAL/testbeam/pedestal/2004/PoolFileCatalog.xml"       
			       string timetype = "runnumber"
			      untracked uint32 authenticationMethod = 0
			     untracked uint32 messagelevel = 1
	 }
       
 module get = EventSetupRecordDataGetter { VPSet toGet = 
       {
		 {string record = "EcalIntercalibConstantsRcd"
		 },
 		{string record = "EcalADCToGeVConstantRcd"
		 vstring data  = {"EcalADCToGeVConstant"}
		}
	    }
	      untracked bool verbose = true 
       }

    es_source = CaloMiscalibTools{
	untracked string fileNameBarrel = "barrel_iniCalib.xml"
	}
    es_prefer = CaloMiscalibTools{}

  

  # rechit producer
  module ecalrechit = EcalRecHitProducer {
    string uncalibRecHitProducer   = "ecaluncalibrechit"
    string EBuncalibRecHitCollection = "EcalUncalibRecHitsEB"
    string EEuncalibRecHitCollection = ""
    string EBrechitCollection        = "EcalRecHitsEB"
    string EErechitCollection        = ""
  }


  module out = PoolOutputModule 
   {	
	untracked vstring outputCommands = 
	  {
	    "drop *"
#	    "keep *"
#	    "keep EcalRecHitsSorted_*_*_*"
	  }
     untracked string fileName = 'tbhits.root'
   }

  # analysis module for HV Scan
  module simpleTBanalysis = MyTBAnalyzer 
  {
   string hitProducer   = "ecalrechit"
   string hitCollection = "EcalRecHitsEB"

   string hodoRecInfoProducer   = "hodoscopeReco"
   string hodoRecInfoCollection = "EcalTBHodoscopeRecInfo"

   string tdcRecInfoProducer   = "tdcReco"
   string tdcRecInfoCollection = "EcalTBTDCRecInfo"

   string eventHeaderProducer   = "Ecal2004TBSource"
   string eventHeaderCollection = ""

   untracked string rootfile = "electronCalibration.root"
   
   untracked uint32 SUBSAMPLE_SIZE = 100000

   string CALIBRATION_ALGO = "HH_ALGORITHM"
   
  }

  path p = {   ecalrechit, simpleTBanalysis }
  endpath ep = { out }
}

