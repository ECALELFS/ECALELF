process phiSymCalibrationProcess = {

   service = MessageLogger
   {
      untracked vstring destinations = {"cerr", "cout"}
      untracked PSet cerr 		     = { untracked string threshold = "ERROR" }
      untracked PSet cout 		     = { untracked string threshold = "WARNING" }
   }

  source = PoolSource {
     untracked vstring fileNames = {
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/00513D2C-2D63-DB11-A2AD-00304885AFC6.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/00EE43E5-6B63-DB11-9431-00304885AEDA.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/0697DB61-8563-DB11-ADA9-00304885B024.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/084901C2-8763-DB11-ACF4-00304885B024.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/0C2A7E96-9C63-DB11-8C36-00304885AD72.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/104437A5-9363-DB11-9312-00304885AE3E.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/148D8BF3-8A63-DB11-9D80-00304885AD72.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/14C4756B-1A63-DB11-B912-000E0C4D3779.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/22226068-3563-DB11-AD58-00304885B0C2.root', 
  '/store/CSA06/CSA06-106-os-minbias-0/ALCARECO/CMSSW_1_0_6-AlcastreamEcalPhiSym-H3ded0a07bfd0450228a3006a0ff2e6a6/1024/24E5BEF9-3963-DB11-92E5-00304885B4A2.root'
				  }
     untracked int32 maxEvents = 1000000
     untracked uint32 debugVebosity = 1
     untracked bool   debugFlag     = false
  }

  #Apply miscalibrations

  include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence_frontier.cff"

  module miscalrechit = EcalRecHitMiscalib {
    string ecalRecHitsProducer = "alCaPhiSymRecHits"
    string barrelHitCollection = "phiSymEcalRecHitsEB"
    string endcapHitCollection = "phiSymEcalRecHitsEE"
    string RecalibBarrelHitCollection = "phiSymEcalRecHitsEBMis"
    string RecalibEndcapHitCollection = "phiSymEcalRecHitsEEMis"
  }

  # geometry needed for clustering
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  module phisymcalib = PhiSymmetryCalibration {
    string VerbosityLevel = "WARNING"

    untracked uint32 maxLoops = 1
    string ecalRecHitsProducer = "miscalrechit"
    string barrelHitCollection = "phiSymEcalRecHitsEBMis"
    string endcapHitCollection = "phiSymEcalRecHitsEEMis"
    double eCut_barrel = 0.15
    double eCut_endcap = 0.75
    int32 eventSet = 1
  }

  path p = {miscalrechit, phisymcalib}
}
